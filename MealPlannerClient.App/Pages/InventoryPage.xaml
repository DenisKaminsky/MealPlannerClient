<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:markupExtensions="clr-namespace:MealPlannerClient.App.MarkupExtensions"
             xmlns:viewModels="clr-namespace:MealPlannerClient.App.ViewModels"
             xmlns:models="clr-namespace:MealPlannerClient.App.Models"
             xmlns:converters="clr-namespace:MealPlannerClient.App.Converters"
             xmlns:behaviors="using:MealPlannerClient.App.Behaviors"
             x:Class="MealPlannerClient.App.Pages.InventoryPage"
             x:DataType="viewModels:InventoryPageViewModel"
             Shell.NavBarIsVisible="False"
             Title="{markupExtensions:TranslateBinding Name=SideMenu_Inventory}"
             ControlTemplate="{StaticResource MainLayoutTemplate}">

    <ContentPage.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:MeasurementUnitToTranslatedStringConverter x:Key="MeasurementUnitToTranslatedStringConverter" />
        <converters:AllTrueMultiConverter x:Key="AllTrueConverter" />
    </ContentPage.Resources>

    <ScrollView>
        <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,*" ColumnDefinitions="*">

            <VerticalStackLayout Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" 
                HorizontalOptions="Center" 
                VerticalOptions="Center"
                IsVisible="{Binding IsMyProductsBusy}">

                <Label 
                    Text="{markupExtensions:TranslateBinding Name=InventoryLoading}" 
                    FontAttributes="Bold" 
                    HorizontalOptions="Center"
                    VerticalOptions="Center"/>

                <ActivityIndicator 
                    Color="{DynamicResource TextColor}"
                    IsRunning="true" 
                    IsVisible="true" 
                    VerticalOptions="CenterAndExpand" 
                    HorizontalOptions="CenterAndExpand"/>

            </VerticalStackLayout>


            <VerticalStackLayout Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" 
                HorizontalOptions="Center" 
                VerticalOptions="Center"
                IsVisible="{Binding IsMyProductsBusy, Converter={StaticResource InverseBooleanConverter}}">

                <Label 
                    Text="{markupExtensions:TranslateBinding Name=InventoryEmpty}" 
                    FontAttributes="Bold" 
                    HorizontalOptions="Center"
                    VerticalOptions="Center" 
                    IsVisible="{Binding HasMyProducts, Converter={StaticResource InverseBooleanConverter}}"/>

            </VerticalStackLayout>

            <Grid Grid.Row="0" Grid.Column="0" 
                  RowDefinitions="Auto" ColumnDefinitions="*,*"
                  Padding="0,0,20,0">

                <Grid.IsVisible>
                    <MultiBinding Converter="{StaticResource AllTrueConverter}">
                        <Binding Path="HasMyProducts" />
                        <Binding Path="IsMyProductsBusy" Converter="{StaticResource InverseBooleanConverter}"/>
                    </MultiBinding>
                </Grid.IsVisible>

                <Label Grid.Row="0" Grid.Column="0"
                       Text="{markupExtensions:TranslateBinding Name=MyProductsText}" 
                       FontAttributes="Bold" 
                       HorizontalOptions="Start"
                       VerticalOptions="Center" />

                <Button Grid.Row="0" Grid.Column="1"
                        HorizontalOptions="End"
                        ImageSource="save_white.png"
                        Text="{markupExtensions:TranslateBinding Name=SaveButtonText}"
                        Command="{Binding SaveMyProductsCommand}"
                        IsEnabled="{Binding IsDirty}"/>
            </Grid>

            <ScrollView HeightRequest="385" Grid.Row="1" Grid.Column="0" Padding="0,0,20,0">
                <CollectionView
                    HorizontalOptions="Start"
                    SelectionMode="None" 
                    ItemsSource="{Binding MyProducts, Mode=TwoWay}">

                    <CollectionView.IsVisible>
                        <MultiBinding Converter="{StaticResource AllTrueConverter}">
                            <Binding Path="HasMyProducts" />
                            <Binding Path="IsMyProductsBusy" Converter="{StaticResource InverseBooleanConverter}"/>
                        </MultiBinding>
                    </CollectionView.IsVisible>

                    <CollectionView.ItemsLayout>
                        <LinearItemsLayout Orientation="Vertical" ItemSpacing="3"/>
                    </CollectionView.ItemsLayout>

                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="models:MyProduct">
                            <Border Stroke="{DynamicResource BorderColor}" StrokeThickness="2" StrokeShape="RoundRectangle 5,5,5,5" Padding="7" >
                                <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*,Auto">
                                    <Label Grid.Row="0" Grid.Column="0"
                                        HorizontalOptions="Start"
                                        WidthRequest="300"
                                        Style="{StaticResource TextLabelStyle}"
                                        Text="{Binding ProductName}"/>

                                    <Label Grid.Row="1" Grid.Column="0"
                                        HorizontalOptions="Start"
                                        Style="{StaticResource HelpTextLabelStyle}"
                                        Text="{Binding CategoryName}"/>

                                    <HorizontalStackLayout Spacing="5" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="10,0,0,0">
                                        <Border Stroke="{DynamicResource BorderColor}" StrokeThickness="1" StrokeShape="RoundRectangle 5,5,5,5" WidthRequest="250">
                                            <Entry 
                                                Keyboard="Numeric"
                                                VerticalTextAlignment="Center"
                                                Placeholder="{markupExtensions:TranslateBinding Name=EnterNumber}"
                                                Text="{Binding Quantity, Mode=TwoWay}">
                                                <Entry.Behaviors>
                                                    <behaviors:PositiveNumberValidationBehavior/>
                                                </Entry.Behaviors>
                                            </Entry>
                                        </Border>

                                        <Label 
                                            WidthRequest="70"
                                            VerticalTextAlignment="Center"
                                            HorizontalTextAlignment="Center"
                                            Style="{StaticResource HelpTextLabelStyle}"
                                            Text="{Binding ProductUnitOfMeasurement, Converter={StaticResource MeasurementUnitToTranslatedStringConverter}}"/>

                                        <Button 
                                            Text="â€“" 
                                            WidthRequest="50" 
                                            Style="{StaticResource StepperButtonStyle}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:InventoryPageViewModel}}, Path=DecrementMyProductQuantityCommand}"
                                            CommandParameter="{Binding Id}"/>

                                        <Button 
                                            Text="+" 
                                            WidthRequest="50" 
                                            Style="{StaticResource StepperButtonStyle}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:InventoryPageViewModel}}, Path=IncrementMyProductQuantityCommand}"
                                            CommandParameter="{Binding Id}"/>
                                    </HorizontalStackLayout>

                                    <Button Grid.Row="0" Grid.Column="2" Grid.RowSpan="2"
                                            HeightRequest="50"
                                            WidthRequest="50"
                                            Style="{StaticResource DeleteButtonStyle}"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:InventoryPageViewModel}}, Path=RemoveMyProductCommand}"
                                            CommandParameter="{Binding Id}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </ScrollView>

            <BoxView Grid.Row="2" Grid.Column="0" HeightRequest="3" Color="{DynamicResource DelimiterColor}" Margin="15,20,15,20"/>

            <VerticalStackLayout Grid.Row="3" Grid.Column="0" Grid.RowSpan="2" 
                 HorizontalOptions="Center" 
                 VerticalOptions="Center"
                 IsVisible="{Binding IsAvailableProductsLoaded, Converter={StaticResource InverseBooleanConverter}}">

                <Label 
                    Text="{markupExtensions:TranslateBinding Name=AvailableProductsLoading}" 
                    FontAttributes="Bold" 
                    HorizontalOptions="Center"
                    VerticalOptions="Center"/>

                <ActivityIndicator 
                    IsRunning="true" 
                    IsVisible="true" 
                    VerticalOptions="CenterAndExpand" 
                    HorizontalOptions="CenterAndExpand"/>

            </VerticalStackLayout>


            <VerticalStackLayout Grid.Row="3" Grid.Column="0" Grid.RowSpan="2" 
                 HorizontalOptions="Center" 
                 VerticalOptions="Center"
                 IsVisible="{Binding IsAvailableProductsLoaded}">

                <Label 
                    Text="{markupExtensions:TranslateBinding Name=AvailableProductsEmpty}" 
                    FontAttributes="Bold" 
                    HorizontalOptions="Center"
                    VerticalOptions="Center" 
                    IsVisible="{Binding HasAvailableProducts, Converter={StaticResource InverseBooleanConverter}}"/>

            </VerticalStackLayout>

            <VerticalStackLayout Grid.Row="3" Grid.Column="0" 
                 IsVisible="{Binding HasAvailableProducts}" 
                 Padding="13,0,13,0">
                <Label 
                       Text="{markupExtensions:TranslateBinding Name=AvailableProductsText}" 
                       FontAttributes="Bold" 
                       HorizontalOptions="Start"
                       VerticalOptions="Center" />
                <Border Stroke="{DynamicResource BorderColor}" StrokeThickness="2" StrokeShape="RoundRectangle 5,5,5,5">
                    <SearchBar x:Name="SearchBar"
                        Placeholder="{markupExtensions:TranslateBinding Name=SearchBarPlaceholder}"
                        SearchCommand="{Binding PerformAvailableProductsSearchCommand}"
                        SearchCommandParameter="{Binding Text, Source={x:Reference SearchBar}}"/>
                </Border>
            </VerticalStackLayout>

            <ScrollView HeightRequest="430" Grid.Row="4" Grid.Column="0" Padding="0,0,0,0">
                <CollectionView
                    x:Name="AvailableProductsCollection"
                    ItemsSource="{Binding AvailableProducts}"
                    IsVisible="{Binding HasAvailableProducts}"
                    IsGrouped="true">

                    <CollectionView.GroupHeaderTemplate>
                        <DataTemplate x:DataType="models:ProductGroup">
                            <Border 
                                StrokeThickness="2" 
                                StrokeShape="RoundRectangle 5,5,0,0" 
                                Padding="7"
                                Stroke="{DynamicResource BorderColor}"
                                BackgroundColor="{DynamicResource HeaderColor}">
                                <Label
                                       HorizontalOptions="Start"
                                       Style="{StaticResource TextLabelStyle}"
                                       TextColor="{DynamicResource ListGroupHeaderColor}"
                                       Text="{Binding Name}"/>
                            </Border>
                        </DataTemplate>
                    </CollectionView.GroupHeaderTemplate>

                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="models:Product">
                            <Border Padding="13,0,13,0" StrokeThickness="0">
                                <Border 
                                    Stroke="{DynamicResource BorderColor}" 
                                    StrokeThickness="1"
                                    Padding="5">
                                    <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*" Padding="30,0,0,0">
                                        <Label Grid.Row="0" Grid.Column="0"
                                            VerticalOptions="Center"
                                            HorizontalOptions="Start"
                                            Style="{StaticResource TextLabelStyle}"
                                            Text="{Binding Name}"/>

                                        <ImageButton Grid.Row="0" Grid.Column="1"
                                            Source="add.png"
                                            HorizontalOptions="End"
                                            WidthRequest="60"
                                            HeightRequest="30"
                                            Padding="0,5,0,5"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:InventoryPageViewModel}}, Path=AddMyProductCommand}"
                                            CommandParameter="{Binding .}"/>

                                    </Grid>
                                </Border>
                            </Border>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>

                </CollectionView>
            </ScrollView>

            <HorizontalStackLayout Grid.Row="5" Grid.Column="0"
                                   Spacing="5"
                VerticalOptions="End"
                Margin="13,10,13,0"
                IsVisible="{Binding HasAvailableProducts}">

                <Button 
                    Text="&lt;" 
                    WidthRequest="50"
                    IsEnabled="{Binding AvailableProductsIsFirstPage, Converter={StaticResource InverseBooleanConverter}}"
                    Command="{Binding GoToPreviousAvailableProductsPageCommand}"/>

                <Border Stroke="{DynamicResource BorderColor}" StrokeThickness="1" StrokeShape="RoundRectangle 5,5,5,5" WidthRequest="250">
                    <Entry 
                        IsReadOnly="True"
                        HorizontalTextAlignment="Center"
                        VerticalTextAlignment="Center">
                        <Entry.Text>
                            <MultiBinding StringFormat="{}{0} {1} {2} {3}">
                                <markupExtensions:TranslateBinding Name="PagerPage"/>
                                <Binding Path="AvailableProductsPageNumber" Mode="OneWay" />
                                <markupExtensions:TranslateBinding Name="PagerPageOf"/>
                                <Binding Path="AvailableProductsTotalPages" Mode="OneWay" />
                            </MultiBinding>
                        </Entry.Text>
                    </Entry>
                </Border>

                <Button 
                    Text="&gt;" 
                    WidthRequest="50"
                    IsEnabled="{Binding AvailableProductsIsLastPage, Converter={StaticResource InverseBooleanConverter}}"
                    Command="{Binding GoToNextAvailableProductsPageCommand}"/>

            </HorizontalStackLayout>

        </Grid>
    </ScrollView>

</ContentPage>